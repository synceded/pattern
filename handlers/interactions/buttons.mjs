import { Client, GatewayIntentBits, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, ChannelType, PermissionsBitField } from 'discord.js';
import db from '../../db.mjs';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import path from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
dotenv.config({ path: path.resolve(__dirname, '../../.env') });

const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.MessageContent, GatewayIntentBits.GuildMessages, GatewayIntentBits.GuildMembers] });

const role_list = {
  '1321555638005796947': {
    role_name: ['test1'],
    role_id: `1321555638005796947`,
    words: ['[T1]', '[–¢1]'],
  },
  '1321555656083374080': {
    role_name: ['test2'],
    role_id: `1321555656083374080`,
    words: ['[T2]', '[–¢2]'],
  },
};

export async function handleButtonInteraction(interaction) {
  let requestedRole = null;
  const requestedChannel = interaction.guild.channels.cache.get(process.env.REQUEST_CHANNEL);
  const [rows] = await db.query("SELECT * FROM discord_role_requests WHERE user_id = ?", [interaction.member.id]);
  
  for (let [roleId, roleData] of Object.entries(role_list)) {
    for (let word of roleData.words) {
      if (interaction.member.displayName.toLowerCase().includes(word.toLowerCase())) {
        requestedRole = roleData;
        break;
      }
    }
    if (requestedRole) break;
  }

  if (interaction.customId === 'request_role') {
    const embed = new EmbedBuilder()
      .setTitle("‚è∞ | –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏")
      .setDescription(`**–ó–∞–ø—Ä–æ—Å–∏–ª: ${interaction.member}**\n**–†–æ–ª—å: <@&${requestedRole.role_id}>**`)
      .addFields(
        {
          name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–∞–º",
          value: "**`[‚úÖ] - –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å`**\n**`[üìú] - –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É`**\n**`[‚ùé] - –æ—Ç–∫–∞–∑–∞—Ç—å –≤—ã–¥–∞—á—É`**",
          inline: false
        },
      )
      .setColor("#00b0f4")
      .setTimestamp();

    if (!requestedRole) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ—Ä–∞–∫—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –Ω–∏–∫—É!')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }

    if (requestedChannel) {
      const buttons = new ActionRowBuilder()
        .addComponents(
          new ButtonBuilder()
            .setCustomId(`accept_req_role_${interaction.member.id}`)
            .setLabel('–í—ã–¥–∞—Ç—å')
            .setEmoji('‚úÖ')
            .setStyle(ButtonStyle.Success),
          new ButtonBuilder()
            .setCustomId(`reject_req_role_${interaction.member.id}`)
            .setLabel('–û—Ç–∫–∞–∑–∞—Ç—å')
            .setEmoji('‚ùé')
            .setStyle(ButtonStyle.Danger),
          new ButtonBuilder()
            .setCustomId(`reqstats_req_role_${interaction.member.id}`)
            .setLabel('–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
            .setEmoji('üìú')
            .setStyle(ButtonStyle.Secondary)
        )

      await requestedChannel.send({ embeds: [embed], components: [buttons] });
      await db.query("INSERT INTO discord_role_requests (user_id, role_id) VALUES (?, ?)", [interaction.member.id, requestedRole.role_id]);
    }

    const successEmbed = new EmbedBuilder()
      .setTitle("‚úÖ | –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
      .setDescription('–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ!')
      .setColor("#00b0f4");
    await interaction.reply({ embeds: [successEmbed], ephemeral: true });
  } else if (interaction.customId.startsWith('accept_req_role_')) {
    const member = await interaction.guild.members.fetch(interaction.customId.split('_')[3]);
    const [rows] = await db.query("SELECT * FROM discord_role_requests WHERE user_id = ?", [member.id]);
    const request = rows[0];
    const user = await interaction.client.users.cache.get(member.id);

    if (rows.length === 0) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }
    if (!request.role_id) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–†–æ–ª—å, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }
    if (!member) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ –ø–æ–∫–∏–Ω—É–ª –µ–≥–æ.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }

    await member.roles.add(interaction.guild.roles.cache.get(request.role_id));
    await user.send({
      embeds: [
        new EmbedBuilder()
          .setTitle("‚úÖ –†–æ–ª—å –≤—ã–¥–∞–Ω–∞")
          .setDescription(`–†–æ–ª—å ${interaction.guild.roles.cache.get(request.role_id).name} –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞`)
          .setColor("#00b0f4")
      ]
    });
    await db.query("DELETE FROM discord_role_requests WHERE user_id = ? AND role_id = ?", [member.id, request.role_id]);

    const successEmbed = new EmbedBuilder()
      .setTitle("‚úÖ | –†–æ–ª—å –≤—ã–¥–∞–Ω–∞")
      .setDescription(`**–ó–∞–ø—Ä–æ—Å–∏–ª: <@${member.id}>**\n**–†–æ–ª—å: <@&${request.role_id}>**`)
      .setColor("#00b0f4")
      .setFooter({ text: `–û–¥–æ–±—Ä–∏–ª: ${interaction.user.tag}`, iconURL: interaction.user.avatarURL() })
      .setTimestamp();

    await interaction.message.edit({ embeds: [successEmbed], components: [] });
    await interaction.reply({ embeds: [successEmbed], ephemeral: true });
  } else if (interaction.customId.startsWith('reject_req_role_')) {
    const member = await interaction.guild.members.fetch(interaction.customId.split('_')[3]);
    const [rows] = await db.query("SELECT * FROM discord_role_requests WHERE user_id = ?", [member.id]);
    const request = rows[0];
    const user = await interaction.client.users.cache.get(member.id);

    if (rows.length === 0) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }
    if (!request.role_id) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–†–æ–ª—å, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }
    if (!member) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ –ø–æ–∫–∏–Ω—É–ª –µ–≥–æ.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }

    await user.send({
      embeds: [
        new EmbedBuilder()
          .setTitle("‚ùå –†–æ–ª—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
          .setDescription(`–†–æ–ª—å ${interaction.guild.roles.cache.get(request.role_id).name} –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞`)
          .setColor("#FF0000")
      ]
    });
    await db.query("DELETE FROM discord_role_requests WHERE user_id = ? AND role_id = ?", [member.id, request.role_id]);

    const rejectEmbed = new EmbedBuilder()
      .setTitle("‚ùå | –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω")
      .setDescription(`**–ó–∞–ø—Ä–æ—Å–∏–ª: <@${member.id}>**\n**–†–æ–ª—å: <@&${request.role_id}>**`)
      .setColor("#FF0000")
      .setFooter({ text: `–û—Ç–∫–ª–æ–Ω–∏–ª: ${interaction.user.tag}`, iconURL: interaction.user.avatarURL() })
      .setTimestamp();

    await interaction.message.edit({ embeds: [rejectEmbed], components: [] });
    await interaction.reply({ embeds: [rejectEmbed], ephemeral: true });
  } else if (interaction.customId.startsWith('reqstats_req_role_')) {
    const member = await interaction.guild.members.fetch(interaction.customId.split('_')[3]);
    const [rows] = await db.query("SELECT * FROM discord_role_requests WHERE user_id = ?", [member.id]);
    const request = rows[0];
    const user = await interaction.client.users.cache.get(member.id);
    const buttons = new ActionRowBuilder()
      .addComponents(
        new ButtonBuilder()
          .setCustomId(`accept_req_role_${interaction.member.id}`)
          .setLabel('–í—ã–¥–∞—Ç—å')
          .setEmoji('‚úÖ')
          .setStyle(ButtonStyle.Success),
        new ButtonBuilder()
          .setCustomId(`reject_req_role_${interaction.member.id}`)
          .setLabel('–û—Ç–∫–∞–∑–∞—Ç—å')
          .setEmoji('‚ùé')
          .setStyle(ButtonStyle.Danger)
      );

    if (rows.length === 0) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }
    if (!request.role_id) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–†–æ–ª—å, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }
    if (!member) {
      const errorEmbed = new EmbedBuilder()
        .setTitle("‚ùå –û—à–∏–±–∫–∞")
        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ –ø–æ–∫–∏–Ω—É–ª –µ–≥–æ.')
        .setColor("#FF0000");
      return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
    }

    await user.send({
      embeds: [
        new EmbedBuilder()
          .setTitle("üìú –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
          .setDescription(`–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä ${interaction.user} –∑–∞–ø—Ä–æ—Å–∏–ª —É –≤–∞—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É`)
          .setColor("#00b0f4")
      ]
    });

    const embed = new EmbedBuilder()
      .setTitle("üìú | –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
      .setDescription(`**–ó–∞–ø—Ä–æ—Å–∏–ª: <@${member.id}>**\n**–†–æ–ª—å: <@&${request.role_id}>**`)
      .setColor("#00b0f4")
      .setFooter({ text: `–ó–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: ${interaction.user.tag}`, iconURL: interaction.user.avatarURL() })
      .setTimestamp();

    await interaction.message.edit({ embeds: [embed], components: [buttons] });
    await interaction.reply({ embeds: [embed], ephemeral: true });
  }
}
