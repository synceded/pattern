import { Client, Events, GatewayIntentBits, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, StringSelectMenuBuilder, StringSelectMenuOptionBuilder, ChannelType, PermissionsBitField } from 'discord.js';
import 'dotenv/config'
import db from './db.mjs';
import cron from 'node-cron'

const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.MessageContent, GatewayIntentBits.GuildMessages, GatewayIntentBits.GuildMembers] });

import { handleOut } from './handlers/commands/out.mjs'
import { handleProfile } from './handlers/commands/profile.mjs'
import { handleBank } from './handlers/commands/bank.mjs'
import { handleDaily } from './handlers/commands/daily.mjs'

import { handleButtonInteraction } from './handlers/interactions/buttons.mjs'
import { handleSelectMenuInteraction } from './handlers/interactions/selectMenu.mjs'

client.on(Events.ClientReady, readyClient => {
  console.log(`[CLIENT] –ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è –∫–∞–∫ ${readyClient.user.tag}!`);
});

client.on(Events.GuildMemberAdd, async member => {
  const [rows] = await db.query('SELECT * FROM discord_profiles WHERE user_id = ?', [member.id])
  if(rows.length === 0){
    await db.query('INSERT INTO discord_profiles (user_id, username) VALUES (?, ?)', [member.id], [member.displayname])
  } else return
})

client.on(Events.InteractionCreate, async interaction => {
  if(interaction.isChatInputCommand()){
    if(interaction.commandName === 'bank') return await handleBank(interaction)
    if(interaction.commandName === 'daily') return await handleDaily(interaction)
    if(interaction.commandName === 'out') return await handleOut(interaction)
    if(interaction.commandName === 'profile') return await handleProfile(interaction)
  } else if(interaction.isButton()){
    await handleButtonInteraction(interaction)
  } else if(interaction.isStringSelectMenu()){
    await handleSelectMenuInteraction(interaction)
  } else {
    await interaction.reply({ content: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–∏–¥ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–∏!', ephemeral: true })
  }
})

client.on(Events.MessageCreate, async message => {
   if (message.content === 'crm' && message.channel.id === process.env.MESSAGE_REQUEST_CHANNEL) {
      await message.delete()
      const buttons = new ActionRowBuilder()
        .addComponents(
          new ButtonBuilder()
            .setCustomId('request_role')
            .setLabel('–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å')
            .setStyle(ButtonStyle.Primary)
        );
      const embedRequestInfo = new EmbedBuilder()
         .setDescription("‚úåÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–∞ —Ä–æ–ª–µ–π!\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å –Ω–∏–∫ –ø–æ —Ñ–æ—Ä–º–µ –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å\".")
         .addFields(
            {
               name: "ü§µ –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –Ω–∏–∫ –ø–æ —Ñ–æ—Ä–º–µ?",
               value: "[`üìå`] –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ, –í–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∏–∫-–Ω–µ–π–º –ø–æ —Ñ–æ—Ä–º–µ: `[—Ñ—Ä–∞–∫—Ü–∏—è] Nick_Name [—Ä–∞–Ω–≥]`\n\n[`üìç`] –ù–∏–∫-–Ω–µ–π–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –Ω–∞–ø–∏—Å–∞–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.\n[`üìü`] –î–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫-–Ω–µ–π–º–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/nick`\n\n[`üñçÔ∏è`] –ü–æ—Å–ª–µ —Å–º–µ–Ω—ã –Ω–∏–∫-–Ω–µ–π–º–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤—ã—à–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"`–ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å`\".\n[`üìö`] –£–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–≥–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–∞–≤–∞, –≤ –¥–∞–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏",
               inline: true
            },
            {
               name: "¬ª –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–≥–æ–≤",
               value: "<@&1321092832823607306> - [GOV]; [–ü–†–ê-–í–û]; [–î–¢–õ]; [DTL]; [CK]; [IC]; [–°–ö]\n<@&1321092834010595348> - [FBI]; [–§–ë–†]\n<@&1321092835528933476> - [LSPD]; [–õ–°–ü–î]; [LSSD]; [–õ–°–°–î]; [RCSD]; [–†–ö–®–î]; [SFPD]; [–°–§–ü–î]; [LVMPD]; [–õ–í–ú–ü–î]\n<@&1321092837445468180> - [–§–ò–ö]; [–ê–ù–ì]; [ANG]; [VNG]; [–í–ù–ì]\n<@&1321092839295422547> - [FD]; [–ü–î]\n<@&1321092840813498378> - [–õ–°–ú–¶]; [LSMC]; [SFMC]; [–°–§–ú–¶]; [LVMC]; [–õ–í–ú–¶]; [–¢–°]; [TC]\n<@&1321092842021589063> - [CNN LS]; [RLS]; [R-LS]; [–†–õ–°]; [–†-–õ–°]; [CNN SF]; [RSF]; [R-SF]; [–†–°–§]; [–†-–°–§]; [CNN LV]; [RLV]; [R-LV]; [–†–õ–í]; [–†-–õ–í]\n<@&1321092843389059145> - [RM]; [–†–ú]\n<@&1321092844714201208> - [WMC]; [–í–ú–°]\n<@&1321092845758582824> - [LCN]; [–õ–ö–ù]\n<@&1321092846966538312> - [YAKUZA]; [–Ø–ö–£–î–ó–ê]\n<@&1321092848287744020> - [TRB]; [–¢–†–ë]\n<@&1321092849764270151> - [GROVE]; [–ì–†–£–í]\n<@&1321092851186274317> - [BALLAS]; [–ë–ê–õ–õ–ê–°]\n<@&1321092852486508604> - [VAGOS]; [–í–ê–ì–û–°]\n<@&1321092853669040209> - [AZTEC]; [–ê–¶–¢–ï–ö]\n<@&1321092856634671154> - [RIFA]; [–†–ò–§–ê]\n<@&1321092855002828810> - [NW]; [–ù–í]",
               inline: true
            },
         )
         .setColor("#7a52a3");

      message.channel.send({ embeds: [embedRequestInfo], components: [buttons] })
   } else if(message.content === 'ctm' && message.channel.id === process.env.MESSAGE_TICKET_CHANNEL){
    await message.delete()

    const [rows] = await db.query('SELECT * FROM discord_statistic');
    const statistic = rows[0] 
    const menuTickets = new ActionRowBuilder()
      .addComponents(
        new StringSelectMenuBuilder()
          .setCustomId('ticket_reason')
          .setPlaceholder('–°—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è')
          .addOptions(
            new StringSelectMenuOptionBuilder()
              .setLabel('–ñ–∞–ª–æ–±–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
              .setValue('ticket_appeal_user'),
            new StringSelectMenuOptionBuilder()
              .setLabel('–ü–æ–º–æ—â—å –ø–æ —Å–∏—Å—Ç–µ–º–∞–º —Å–µ—Ä–≤–µ—Ä–∞')
              .setValue('ticket_help_server'),
            new StringSelectMenuOptionBuilder()
              .setLabel('–°–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–≥–µ')
              .setValue('ticket_report_bug'),
            new StringSelectMenuOptionBuilder()
              .setLabel('–î—Ä—É–≥–æ–µ')
              .setValue('ticket_other')
          )
      )
      const value = '[``üìå``] - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: ``' + statistic.tickets_all + '``\n' +
              '[``üëÄ``] - –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏: ``' + statistic.tickets_pending + '``\n' +
              '[``üîí``] - –ó–∞–∫—Ä—ã—Ç—ã—Ö: ``' + statistic.tickets_closed + '``';
      const embedTickets = new EmbedBuilder()
        .setTitle("–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π")
        .setDescription("[`üëã`] –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∫–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Discord –ø—Ä–æ–µ–∫—Ç–∞ New Project!\n\n[`üìÉ`] –í—ã–±–µ—Ä–∏—Ç–µ —Å—É—Ç—å –í–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã, –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª–µ–ª—å–Ω–æ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å!")
        .addFields(
          {
            name: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –°–∏—Å—Ç–µ–º—ã –û–±—Ä–∞—â–µ–Ω–∏–π",
            value: value,
            inline: false
          },
        )
        .setColor("#00b0f4")
        .setFooter({ text: "–°–æ—Å—Ç–∞–≤ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞" });

      message.channel.send({ embeds: [embedTickets], components: [menuTickets] });
   } else if (message.content === '/close' && message.channel.parentId === process.env.TICKET_CATEGORY) {
    const [rows] = await db.query('SELECT * FROM discord_statistic');
    const [rows1] = await db.query('SELECT * FROM discord_tickets WHERE channel_id = ?', [message.channel.id]);
    const statistic = rows[0];
    const ticketData = rows1[0];
    const closedTicketCategory = message.guild.channels.cache.find(c => c.id === process.env.CLOSED_TICKET_CATEGORY);
    const member = await message.guild.members.fetch(ticketData.user_id);
    const ticketChannelInfo = await message.guild.channels.cache.get(process.env.MESSAGE_TICKET_CHANNEL)
    const ticketChannelMessage = await ticketChannelInfo.messages.fetch(process.env.MESSAGE_TICKET_CHANNEL_ID)

    if (!closedTicketCategory) return console.log('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');

    const valueEmbed = '[``üìå``] - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: ``' + statistic.tickets_all + '``\n' +
                  '[``üëÄ``] - –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏: ``' + (statistic.tickets_pending - 1) + '``\n' +
                  '[``üîí``] - –ó–∞–∫—Ä—ã—Ç—ã—Ö: ``' + (statistic.tickets_closed + 1) + '``';
    const embedTickets = new EmbedBuilder()
      .setTitle("–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π")
      .setDescription("[`üëã`] –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∫–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Discord –ø—Ä–æ–µ–∫—Ç–∞ New Project!\n\n[`üìÉ`] –í—ã–±–µ—Ä–∏—Ç–µ —Å—É—Ç—å –í–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã, –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª–µ–ª—å–Ω–æ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å!")
      .addFields(
        {
          name: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –°–∏—Å—Ç–µ–º—ã –û–±—Ä–∞—â–µ–Ω–∏–π",
          value: valueEmbed,
          inline: false
        },
      )
      .setColor("#00b0f4")
      .setFooter({ text: "–°–æ—Å—Ç–∞–≤ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞" });

    await message.delete();
    await db.query("UPDATE discord_statistic SET tickets_pending = ?, tickets_closed = ?", [ statistic.tickets_pending - 1, statistic.tickets_closed + 1 ]);
    await message.channel.send(`<@${ticketData.user_id}>, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä ${message.author} —É—Å—Ç–∞–Ω–æ–≤–∏–ª –≤–∞—à–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—é —Å—Ç–∞—Ç—É—Å "–ó–∞–∫—Ä—ã—Ç–æ".`);
    await db.query("UPDATE discord_tickets SET status = ? WHERE channel_id = ?", ['closed', message.channel.id]);
    await message.channel.setParent(closedTicketCategory);
    await message.channel.permissionOverwrites.edit(member, { SendMessages: false });
    await ticketChannelMessage.edit({ embeds: [embedTickets] })
  }
});

cron.schedule('0 0 * * *', async () => {
  const [rows] = await db.query('SELECT user_id, dp_bank FROM discord_profiles WHERE dp_bank > 0');

  for (const user of rows) {
    const newDeposit = Math.floor(user.dp_bank * 1.025)
    await db.query('UPDATE discord_profiles SET dp_bank = ? WHERE user_id = ?', [newDeposit, user.user_id]);
    console.log(`[ECONOMY] –î–µ–ø–æ–∑–∏—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!`)
  }
});

client.login(process.env.TOKEN);